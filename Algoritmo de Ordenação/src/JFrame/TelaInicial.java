/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package JFrame;

import ConexaoBanco.ConnectionFactory;
import ConexaoSql.SqlOrdenacao;
import GetSetters.ConexaoOrdenacao;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Arrays;
import java.util.stream.IntStream;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Unip
 */
public class TelaInicial extends javax.swing.JFrame {

    /**
     * Creates new form TelaInicial
     */
    //variavel global para definir quantos vetores devem ser criados
    int Quantidade = 15;
    //vetores da tabela Ordenada
    int [] VetorIdOrdenado = new int [Quantidade];
    int [] VetorId = new int [Quantidade];
    int [] VetorOrdenado = new int [Quantidade];
    //Vetores da tabela desordenada
    int [] VetorIdOrdenado_Desordenado = new int [Quantidade];
    int [] VetorId_Desordenado = new int [Quantidade];
    int [] VetorOrdenado_Desordenado = new int [Quantidade];
            
    private int[] values;
    BufferedImage imagem;
    private TableModel model;
    
    public TelaInicial() {
        initComponents();
        
        CampoId.setVisible(false);
        
        //Ao clicar em uma linha dentro da tabela o Id é passado para um TextBox

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabelaOrdenada = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        TabelaDesordenada = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Campo_MetodoUsado = new javax.swing.JTextField();
        Campo_TempoInicio = new javax.swing.JTextField();
        Campo_TempoFinal = new javax.swing.JTextField();
        Campo_TempoGasto = new javax.swing.JTextField();
        Botao_ExportarRelatorio = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        Campo_AplicadoEm = new javax.swing.JTextField();
        Botao_AtualizarTabela = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        Botao_SelectSort = new javax.swing.JButton();
        Botao_BubbleSort = new javax.swing.JButton();
        Botao_InsertSort = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        Campo_IdOrdenado = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        Botao_JuntarImagem = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        Botao_EscolherImagem = new javax.swing.JButton();
        IconImagem = new javax.swing.JLabel();
        CampoId = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        TabelaOrdenada.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "ID Posiçao"
            }
        ));
        TabelaOrdenada.getTableHeader().setReorderingAllowed(false);
        TabelaOrdenada.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelaOrdenadaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TabelaOrdenada);

        TabelaDesordenada.setAutoCreateRowSorter(true);
        TabelaDesordenada.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Id Posição"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TabelaDesordenada.getTableHeader().setReorderingAllowed(false);
        TabelaDesordenada.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelaDesordenadaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TabelaDesordenada);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Dados Desordenados no Banco de Dados");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Dados Ordenados");

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel4.setText("Método Usado");

        jLabel5.setText("Tempo Inicial");

        jLabel6.setText("Tempo Final");

        jLabel7.setText("Tempo Gasto");

        Campo_MetodoUsado.setEditable(false);
        Campo_MetodoUsado.setEnabled(false);

        Campo_TempoInicio.setEnabled(false);

        Campo_TempoFinal.setEnabled(false);

        Campo_TempoGasto.setEnabled(false);

        Botao_ExportarRelatorio.setText("Exportar Relátorio");
        Botao_ExportarRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Botao_ExportarRelatorioActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setText("Relátorio");

        jLabel1.setText("Aplicado em");

        Campo_AplicadoEm.setEditable(false);
        Campo_AplicadoEm.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Campo_MetodoUsado, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(Campo_TempoInicio, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                                .addComponent(Campo_TempoFinal)
                                .addComponent(Campo_TempoGasto)
                                .addComponent(Campo_AplicadoEm))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Botao_ExportarRelatorio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel17)
                .addGap(141, 141, 141))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel17)
                .addGap(13, 13, 13)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(Campo_MetodoUsado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(Campo_AplicadoEm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(Campo_TempoInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(Campo_TempoFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(Campo_TempoGasto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Botao_ExportarRelatorio)
                .addContainerGap())
        );

        Botao_AtualizarTabela.setIcon(new javax.swing.ImageIcon(getClass().getResource("/JFrame/IconAtualizar.png"))); // NOI18N
        Botao_AtualizarTabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Botao_AtualizarTabelaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel2)
                        .addGap(26, 26, 26))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(Botao_AtualizarTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(jLabel8)
                        .addGap(103, 103, 103))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(Botao_AtualizarTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel8)
                                .addComponent(jLabel2))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setText("Resultados");

        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        Botao_SelectSort.setText("Select Sort");
        Botao_SelectSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Botao_SelectSortActionPerformed(evt);
            }
        });

        Botao_BubbleSort.setText("Bubble Sort");
        Botao_BubbleSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Botao_BubbleSortActionPerformed(evt);
            }
        });

        Botao_InsertSort.setText("Insert Sort");
        Botao_InsertSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Botao_InsertSortActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Aplique um Método de Ordenação");

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 0, 0));
        jLabel19.setText("3° Passo");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Botao_InsertSort, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Botao_BubbleSort, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Botao_SelectSort, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(jLabel19)))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addGap(48, 48, 48)
                .addComponent(Botao_InsertSort)
                .addGap(34, 34, 34)
                .addComponent(Botao_BubbleSort)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Botao_SelectSort)
                .addContainerGap())
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        Campo_IdOrdenado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Campo_IdOrdenadoActionPerformed(evt);
            }
        });

        jLabel3.setText("ID Posição");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Defina o ID para a Imagem");

        Botao_JuntarImagem.setText("Juntar Imagem ao ID");
        Botao_JuntarImagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Botao_JuntarImagemActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 0, 0));
        jLabel18.setText("2° Passo");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel18)
                .addGap(111, 111, 111))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Campo_IdOrdenado, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(70, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Botao_JuntarImagem, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel14)
                .addGap(43, 43, 43)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Campo_IdOrdenado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Botao_JuntarImagem)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 0, 0));
        jLabel11.setText("1° Passo");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setText("Escolha uma imagem");

        Botao_EscolherImagem.setText("Escolher Imagem");
        Botao_EscolherImagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Botao_EscolherImagemActionPerformed(evt);
            }
        });

        IconImagem.setToolTipText("");
        IconImagem.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        IconImagem.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        IconImagem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                IconImagemMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addGap(119, 119, 119))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jLabel15))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(IconImagem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Botao_EscolherImagem, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE))))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(IconImagem, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Botao_EscolherImagem)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        CampoId.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(CampoId, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(302, 302, 302)
                        .addComponent(jLabel16))
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(CampoId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("Análise de Performance usando Algoritmos de Ordenação");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(260, 260, 260)
                        .addComponent(jLabel10)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(999, 676));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void Botao_JuntarImagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Botao_JuntarImagemActionPerformed
        try {
             if(Campo_IdOrdenado.getText().equals("")){
                 JOptionPane.showMessageDialog(null,"Necessário escolher um Id");
             }
             if(imagem == null){
                 JOptionPane.showMessageDialog(null,"Obrigatório Escolher uma Imagem");
             }
             if(Campo_IdOrdenado.getText().equals(VetorIdOrdenado[5])){
                 String CampoIdValor = Campo_IdOrdenado.getText();
                 JOptionPane.showMessageDialog(null,"Este valor já existe, Informe outro");
             }
             else{
                ConexaoOrdenacao obj = new ConexaoOrdenacao();
                obj.setIdOrdenado(Integer.parseInt(Campo_IdOrdenado.getText()));
                obj.setImagem(ManipularImagem.getImgBytes(imagem));
                SqlOrdenacao dao = new SqlOrdenacao();
                Boolean foi = dao.Salvar(obj);
                    if(foi)
                        {
                            JOptionPane.showMessageDialog(null, "Imagem Salva junto com imagem");
                            //Chama o metodo que atualiza a tabela desordenada
                            AtualizarTabelaDesordenada();
                        }
                    else
                    {
                            JOptionPane.showMessageDialog(null, "Houve um erro!");
                    }
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null,"Esse arquivo não é suportado, Motivo: "+ex); 
        }
    }//GEN-LAST:event_Botao_JuntarImagemActionPerformed

    private void Botao_InsertSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Botao_InsertSortActionPerformed
        try{
            long TempoInicial = System.currentTimeMillis();
            SqlOrdenacao dao= new SqlOrdenacao();
            int linha = 0;
            DefaultTableModel model = (DefaultTableModel)TabelaOrdenada.getModel();
            for(ConexaoOrdenacao c: dao.PesquisarTudo()){
                //Passa os valores de dentro do banco para os vetores
                VetorId[linha] = c.getId();
                VetorIdOrdenado[linha] = c.getIdOrdenado();
                linha++;
                insertionSort(VetorIdOrdenado,VetorId);
            }
            long TempoFinal = System.currentTimeMillis();
            long TempoTotal = (TempoFinal - TempoInicial);

            LimparCampos();
            Campo_MetodoUsado.setText("Insert Sort");
            Campo_AplicadoEm.setText(linha+" Registro(s)");
            Campo_TempoInicio.setText(Long.toString(TempoInicial)+" ms");
            Campo_TempoFinal.setText(Long.toString(TempoFinal)+" ms");
            Campo_TempoGasto.setText(Long.toString(TempoTotal)+ " ms"); 
        }
        catch(Exception erro){
            JOptionPane.showMessageDialog(null,"Erro dentro do metódo Insert Sort "+erro);
        }
    }//GEN-LAST:event_Botao_InsertSortActionPerformed

    public void insertionSort(int[] VetorIdOrdenado,int[] VetorId) {
        int j;
        int key;
        int i;
        for (j = 1; j < VetorIdOrdenado.length; j++) {
                key = VetorIdOrdenado[j];
                for (i = j - 1; (i >= 0) && (VetorIdOrdenado[i] > key); i--) {
                    VetorIdOrdenado[i + 1] = VetorIdOrdenado[i];
                }
                VetorIdOrdenado[i + 1] = key;
                PreencherTabelaOrdenada(VetorIdOrdenado,VetorId);
        }
    }
    
    public void PreencherTabelaOrdenada(int[] VetorIdOrdenado, int[] VetorId) {
    try{
        SqlOrdenacao dao= new SqlOrdenacao();
        DefaultTableModel model = (DefaultTableModel)TabelaOrdenada.getModel();
        int linha = 0;
        for(ConexaoOrdenacao c: dao.PesquisarTudo()){
        //passa dos vetores para a tabela
        model.setValueAt(VetorId[linha], linha,0);
        model.setValueAt(VetorIdOrdenado[linha], linha,1);
        linha++;
        }
    }
    catch(Exception erro){
               JOptionPane.showMessageDialog(null, "Erro ao atualizar Tabela: "+erro);
        }
    }
    
    private void LimparCampos(){
        //Método para limpar os campos do relatório
        Campo_MetodoUsado.setText("");
        Campo_AplicadoEm.setText("");
        Campo_TempoInicio.setText("");
        Campo_TempoFinal.setText("");
        Campo_TempoGasto.setText("");
    }
    
    private void Botao_BubbleSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Botao_BubbleSortActionPerformed
            try{
            long TempoInicial = System.currentTimeMillis();
            SqlOrdenacao dao= new SqlOrdenacao();
            int linha = 0;
            DefaultTableModel model = (DefaultTableModel)TabelaOrdenada.getModel();
            for(ConexaoOrdenacao c: dao.PesquisarTudo()){
            //Passa os valores de dentro do banco para os vetores
            VetorId[linha] = c.getId();
            VetorIdOrdenado[linha] = c.getIdOrdenado();
            linha++;
            bubbleSort(VetorIdOrdenado,VetorId);
            }
            long TempoFinal = System.currentTimeMillis();
            long TempoTotal = (TempoFinal - TempoInicial);

            LimparCampos(); 
            Campo_MetodoUsado.setText("Bubble Sort");
            Campo_AplicadoEm.setText(linha+" Registro(s)");
            Campo_TempoInicio.setText(Long.toString(TempoInicial)+" ms");
            Campo_TempoFinal.setText(Long.toString(TempoFinal)+" ms");
            Campo_TempoGasto.setText(Long.toString(TempoTotal)+ " ms");
        }
        catch (Exception erro){
            JOptionPane.showMessageDialog(null,"Erro dentro do metódo Bubble Sort "+erro);
        }
    }//GEN-LAST:event_Botao_BubbleSortActionPerformed

    private void bubbleSort(int[] VetorIdOrdenado,int[] VetorId) {
        boolean troca = true;
        int aux;
        while (troca) {
            troca = false;
                for (int i = 0; i < VetorIdOrdenado.length - 1; i++) {
                    if (VetorIdOrdenado[i] > VetorIdOrdenado[i + 1]) {
                        aux = VetorIdOrdenado[i];
                        VetorIdOrdenado[i] = VetorIdOrdenado[i + 1];
                        VetorIdOrdenado[i + 1] = aux;
                        troca = true;
                    }
            }
                PreencherTabelaOrdenada(VetorIdOrdenado,VetorId);
        }
    }
        
    private void Campo_IdOrdenadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Campo_IdOrdenadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Campo_IdOrdenadoActionPerformed

    private void Botao_EscolherImagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Botao_EscolherImagemActionPerformed
        JFileChooser janela = new JFileChooser();
        int res = janela.showOpenDialog(null);
        if (res == JFileChooser.APPROVE_OPTION) {
            File arquivo = janela.getSelectedFile();
            try {
                //Defino o tamanho a imagem dentro do Jlabel chamado de "IcoImagem" os parametro definem largura e altura respectivamente
                imagem = ManipularImagem.setImagemDimensao(arquivo.getAbsolutePath(), 227,300);
                IconImagem.setIcon(new ImageIcon(imagem));
            } catch (Exception ex) {
                // System.out.println(ex.printStackTrace().toString());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Voce nao selecionou nenhum arquivo.");
        }
    }//GEN-LAST:event_Botao_EscolherImagemActionPerformed

    private void IconImagemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IconImagemMouseClicked

    }//GEN-LAST:event_IconImagemMouseClicked

    private void Botao_AtualizarTabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Botao_AtualizarTabelaActionPerformed
         AtualizarTabelaDesordenada();
    }//GEN-LAST:event_Botao_AtualizarTabelaActionPerformed

    private void Botao_SelectSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Botao_SelectSortActionPerformed
        try{
                long TempoInicial = System.currentTimeMillis();
                SqlOrdenacao dao= new SqlOrdenacao();
                int linha = 0;
                DefaultTableModel model = (DefaultTableModel)TabelaOrdenada.getModel();
            for(ConexaoOrdenacao c: dao.PesquisarTudo()){
                //Passa os valores de dentro do banco para os vetores
                VetorId[linha] = c.getId();
                VetorIdOrdenado[linha] = c.getIdOrdenado();
                linha++;
                //Algoritmo de Ordenação Select Sort
                selectionSort(VetorIdOrdenado,VetorId);
                long TempoFinal = System.currentTimeMillis();
                long TempoTotal = (TempoFinal - TempoInicial);

                //Chama o método que limpar os campos do relatório
                LimparCampos();
                //Preenche os campo de texto exibidos na tela
                Campo_MetodoUsado.setText("Select Sort");
                Campo_AplicadoEm.setText(linha+" Registro(s)");
                Campo_TempoInicio.setText(Long.toString(TempoInicial)+" ms");
                Campo_TempoFinal.setText(Long.toString(TempoFinal)+" ms");
                Campo_TempoGasto.setText(Long.toString(TempoTotal)+ " ms");
            }
        }
        
        catch(Exception erro){
            JOptionPane.showMessageDialog(null,"Erro dentro do metódo Select Sort "+erro);
        }    
    }//GEN-LAST:event_Botao_SelectSortActionPerformed
    
    public void selectionSort(int[] VetorIdOrdenado, int [] VetorId) {
        for (int fixo = 0; fixo < VetorIdOrdenado.length - 1; fixo++) {
                int menor = fixo;
                for (int i = menor + 1; i < VetorIdOrdenado.length; i++) {
                        if (VetorIdOrdenado[i] < VetorIdOrdenado[menor]) {
                            menor = i;
                        }
                }
                if (menor != fixo) {
                        int t = VetorIdOrdenado[fixo];
                        VetorIdOrdenado[fixo] = VetorIdOrdenado[menor];
                        VetorIdOrdenado[menor] = t;
                }
                PreencherTabelaOrdenada(VetorIdOrdenado,VetorId);
        }
    }
    
    private void Botao_ExportarRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Botao_ExportarRelatorioActionPerformed
        try{
            JFileChooser JanelaEscolha = new JFileChooser();
            //Inicio a janela com a função salvar
            int resultado = JanelaEscolha.showSaveDialog(this);
            if(resultado != JFileChooser.APPROVE_OPTION){
                return;
            }
            //Salvar seria o nome do arquivo que contém as informações gerado pelo PrintWriter
            File Salvar = JanelaEscolha.getSelectedFile();
            PrintWriter out = new PrintWriter(new FileWriter(Salvar+".txt"));
                out.println("Metodo Usado: "+Campo_MetodoUsado.getText());
                out.println("Metodo aplicado em: "+Campo_AplicadoEm.getText());
                out.println("Tempo Inicial: "+Campo_TempoInicio.getText());
                out.println("Tempo Final: "+Campo_TempoFinal.getText());
                out.println("Tempo Gasto: "+Campo_TempoGasto.getText());
                out.println("===============================================================");
                out.close();
                JOptionPane.showMessageDialog(null, "Relatório exportado com Sucesso");
        }
        catch(Exception erro){
            JOptionPane.showMessageDialog(null, "Erro Exportar Relatório: "+erro);
        }        
    }//GEN-LAST:event_Botao_ExportarRelatorioActionPerformed

    private void TabelaDesordenadaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelaDesordenadaMouseClicked
        //Variavel responsavel por pegar a posição da linha selecionada
        int linhaSelecionada = TabelaDesordenada.getSelectedRow();
        try{
        String Id = TabelaDesordenada.getValueAt(linhaSelecionada, 0).toString();//pegar os valores da linha selecionada e coluna Id
        String IdOrdenado =  TabelaDesordenada.getValueAt(linhaSelecionada, 1).toString();//pegar os valores da linha selecionada e coluna IdOrdenado
        CampoId.setText(Id);
        Campo_IdOrdenado.setText(IdOrdenado);
        
        //Responsavel por fazer a pesquisa e preencher a label com a imagem usando como busca o Campo Id
        SqlOrdenacao IniciarSqlOrdenacao = new SqlOrdenacao();
        IniciarSqlOrdenacao.Ordenacao(IdOrdenado);
        ConexaoOrdenacao GS = new ConexaoOrdenacao();
        
        }
        catch(Exception erro){
            JOptionPane.showMessageDialog(null,"Selecione uma linha que tenha Informações  "+erro);
        }
    }//GEN-LAST:event_TabelaDesordenadaMouseClicked

    private void TabelaOrdenadaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelaOrdenadaMouseClicked
        //Variavel responsavel por pegar a posição da linha selecionada
        int linhaSelecionada = TabelaOrdenada.getSelectedRow();
        try{
        String Id = TabelaOrdenada.getValueAt(linhaSelecionada, 0).toString();//pegar os valores da linha selecionada e coluna Id
        String IdOrdenado =  TabelaOrdenada.getValueAt(linhaSelecionada, 1).toString();//pegar os valores da linha selecionada e coluna IdOrdenado
        CampoId.setText(Id);
        Campo_IdOrdenado.setText(IdOrdenado);
        
        //Responsavel por fazer a pesquisa e preencher a label com a imagem usando como busca o Campo Id
        SqlOrdenacao IniciarSqlOrdenacao = new SqlOrdenacao();
        IniciarSqlOrdenacao.Ordenacao(IdOrdenado);
        }
        catch(Exception erro){
            JOptionPane.showMessageDialog(null,"Selecione uma linha que tenha Informações");
        }
    }//GEN-LAST:event_TabelaOrdenadaMouseClicked
   
    public void AtualizarTabelaDesordenada(){
        try{
            SqlOrdenacao dao= new SqlOrdenacao();
            DefaultTableModel model = (DefaultTableModel)TabelaDesordenada.getModel();
            int linha = 0;
            for(ConexaoOrdenacao c: dao.PesquisarTudo()){
                //passa do get para os vetores
                VetorId_Desordenado[linha] = c.getId();
                VetorIdOrdenado_Desordenado[linha] = c.getIdOrdenado();
                //passa dos vetores para a tabela
                model.setValueAt(VetorId_Desordenado[linha], linha,0);
                model.setValueAt(VetorIdOrdenado_Desordenado[linha], linha,1);
                linha++;
            }
        }
        catch(Exception erro){
               JOptionPane.showMessageDialog(null, "Erro ao atualizar Tabela: "+erro);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaInicial().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Botao_AtualizarTabela;
    private javax.swing.JButton Botao_BubbleSort;
    private javax.swing.JButton Botao_EscolherImagem;
    private javax.swing.JButton Botao_ExportarRelatorio;
    private javax.swing.JButton Botao_InsertSort;
    private javax.swing.JButton Botao_JuntarImagem;
    private javax.swing.JButton Botao_SelectSort;
    private javax.swing.JTextField CampoId;
    private javax.swing.JTextField Campo_AplicadoEm;
    private javax.swing.JTextField Campo_IdOrdenado;
    private javax.swing.JTextField Campo_MetodoUsado;
    private javax.swing.JTextField Campo_TempoFinal;
    private javax.swing.JTextField Campo_TempoGasto;
    private javax.swing.JTextField Campo_TempoInicio;
    private javax.swing.JLabel IconImagem;
    private javax.swing.JTable TabelaDesordenada;
    private javax.swing.JTable TabelaOrdenada;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}